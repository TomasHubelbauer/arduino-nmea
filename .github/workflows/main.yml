name: ci
on: push
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Validate expected output
      run: |
        set -x
        # Download Arduino CLI 0.5.0
        curl -L https://github.com/arduino/arduino-cli/releases/download/0.5.0/arduino-cli_0.5.0_Linux_64bit.tar.gz -o arduino-cli.tar.gz
        # Extract the archive to get `arduino-cli`
        tar -xvzf arduino-cli.tar.gz
        # Update index and install the AVR core
        ./arduino-cli core update-index
        ./arduino-cli core install arduino:avr
        # Compile the sketch to get the HEX and ELF files
        ./arduino-cli compile -b arduino:avr:uno nmea-checksum.ino
        # Install dependencies for building SimAVR
        sudo apt-get update
        sudo apt-get install -y build-essential libelf-dev avr-libc gcc-avr freeglut3-dev libncurses5-dev pkg-config
        # Close the SimAVR repo and build it
        git clone https://github.com/buserror/simavr.git
        cd simavr
        make
        # Go to the compiled artifacts where `run_avr` is now
        cd simavr
        # Start the simulation with a timeout of 10 seconds (because of the infinite loop)
        timeout 10 ./run_avr -m atmega168 -f 16000000 ../../nmea-checksum.ino.arduino.avr.uno.elf > nmea-checksum.ino.clog || true
        # Strip ANSI color codes from the output
        cat nmea-checksum.ino.clog | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" > nmea-checksum.ino.log
        cat nmea-checksum.ino.log
        # Check if the produced file matches the expected file
        diff nmea-checksum.ino.log nmea-checksum.ino.test
